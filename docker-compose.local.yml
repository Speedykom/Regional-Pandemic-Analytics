version: "3.4"

## This overrides frontend on the docker-compose.yml file when running run.local.sh, this is done so the frontend local container
## can be updated in real time while editing frontend code, it only needs to be restarted when changing the env variables
services:
  # ========
  # Frontend
  # ========
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      target: dev
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "superset.igad.local:host-gateway"
      - "backend.igad.local:host-gateway"
    volumes:
      - ./frontend/src/:/frontend/src

  superset:
    container_name: superset
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "keycloak.igad.local:host-gateway"
      - "frontend.igad.local:host-gateway"
    command:
      - -c
      - |
        superset fab create-admin --username speedykom --firstname Superset --lastname Admin --email admin@superset.com --password speedykom
        superset db upgrade
        superset superset init
        FLASK_ENV=development flask run -p 8088 --with-threads --reload --debugger --host=0.0.0.0

  # =======
  # Nginx
  # =======
  nginx:
    image: nginx:1.25.1-alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_ENV=${NGINX_ENV}
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx/conf.d/
      - NGINX_FRONTEND_DOMAIN_NAME=${NGINX_FRONTEND_DOMAIN_NAME}
      - NGINX_OPENHIM_DOMAIN_NAME=${NGINX_OPENHIM_DOMAIN_NAME}
      - NGINX_CONSOLE_OPENHIM_DOMAIN_NAME=${NGINX_CONSOLE_OPENHIM_DOMAIN_NAME}
      - NGINX_BACKEND_DOMAIN_NAME=${NGINX_BACKEND_DOMAIN_NAME}
      - NGINX_KEYCLOAK_DOMAIN_NAME=${NGINX_KEYCLOAK_DOMAIN_NAME}
      - NGINX_MINIO_DOMAIN_NAME=${NGINX_MINIO_DOMAIN_NAME}
      - NGINX_CONSOLE_MINIO_DOMAIN_NAME=${NGINX_CONSOLE_MINIO_DOMAIN_NAME}
      - NGINX_SUPERSET_DOMAIN_NAME=${NGINX_SUPERSET_DOMAIN_NAME}
      - NGINX_AIRFLOW_DOMAIN_NAME=${NGINX_AIRFLOW_DOMAIN_NAME}
      - NGINX_HOP_DOMAIN_NAME=${NGINX_HOP_DOMAIN_NAME}
      - NGINX_DRUID_DOMAIN_NAME=${NGINX_DRUID_DOMAIN_NAME}
      - NGINX_DRUID_COORDINATOR_DOMAIN_NAME=${NGINX_DRUID_COORDINATOR_DOMAIN_NAME}
      - NGINX_UPSTREAM_FRONTEND=${NGINX_UPSTREAM_FRONTEND}
      - NGINX_UPSTREAM_BACKEND=${NGINX_UPSTREAM_BACKEND}
      - NGINX_UPSTREAM_AIRFLOW=${NGINX_UPSTREAM_AIRFLOW}
      - NGINX_UPSTREAM_KEYCLOAK=${NGINX_UPSTREAM_KEYCLOAK}
      - NGINX_UPSTREAM_MINIO=${NGINX_UPSTREAM_MINIO}
      - NGINX_UPSTREAM_SUPERSET=${NGINX_UPSTREAM_SUPERSET}
      - NGINX_UPSTREAM_OPENHIM=${NGINX_UPSTREAM_OPENHIM}
      - NGINX_UPSTREAM_CONSOLE_OPENHIM=${NGINX_UPSTREAM_CONSOLE_OPENHIM}
      - NGINX_UPSTREAM_HOP=${NGINX_UPSTREAM_HOP}
      - NGINX_UPSTREAM_DRUID=${NGINX_UPSTREAM_DRUID}
      - NGINX_UPSTREAM_DRUID_COORDINATOR=${NGINX_UPSTREAM_DRUID_COORDINATOR}
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/package-conf-${NGINX_ENV}/:/etc/nginx/templates/package-conf/
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - airflow-webserver

  # =====
  #  Hop
  # =====
  hop:
    container_name: hop
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "keycloak.igad.local:host-gateway"

  # =====
  #  Minio
  # =====

  storage:
    container_name: storage
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "minio.igad.local:host-gateway"

  # =====
  #  OpenHIM
  # =====

  mongo-db:
    container_name: mongo-db
    image: mongo:4.0
    volumes:
      - "mongo-data:/data/db"
    restart: unless-stopped

  openhim-core:
    container_name: openhim-core
    image: jembi/openhim-core:latest
    restart: unless-stopped
    environment:
      - mongo_url=mongodb://mongo-db/openhim-development
      - mongo_atnaUrl=mongodb://mongo-db/openhim-development
      - api_authenticationTypes=["token", "basic", "openid", "local"]
      - authentication_enableCustomTokenAuthentication=true
      - api_openid_url=${OPENHIM_KEYCLOAK_FRONTEND_URL}/realms/${OPENHIM_KEYCLOAK_REALM_NAME}
      - api_openid_callbackUrl=${OPENHIM_KEYCLOAK_ROOT_URL}
      - api_openid_clientId=${OPENHIM_KEYCLOAK_CLIENT_ID}
      - api_openid_clientSecret=${OPENHIM_KEYCLOAK_SECRET}
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "keycloak.igad.local:host-gateway"

    ports:
      - "8080:8080"
      - "5000:5000"
      - "5001:5001"
    depends_on:
      - mongo-db
    healthcheck:
      test: "curl -sSk https://openhim-core:8080/heartbeat || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3

  openhim-console:
    container_name: openhim-console
    image: jembi/openhim-console:latest
    ports:
      - "9000:80"
    environment:
      - KC_OPENHIM_SSO_ENABLED=true
      - KC_OPENHIM_CLIENT_ID=${OPENHIM_KEYCLOAK_CLIENT_ID}
      - KC_REALM_NAME=${OPENHIM_KEYCLOAK_REALM_NAME}
      - KC_FRONTEND_URL=${OPENHIM_KEYCLOAK_FRONTEND_URL}
      - OPENHIM_CORE_MEDIATOR_HOSTNAME=${OPENHIM_CORE_MEDIATOR_HOSTNAME}
      - OPENHIM_MEDIATOR_API_PORT=${OPENHIM_MEDIATOR_API_PORT}
    depends_on:
      - openhim-core
    restart: unless-stopped
    healthcheck:
      test: "curl -sS http://openhim-console || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3

volumes:
  mongo-data:
