version: "3.4"

x-common:
  &superset
    image: apache/superset
    environment:
      - SUPERSET_SECRET_KEY=${SUPERSET_SECRET_KEY}
    volumes:
      - ./staging/superset/config.py:/app/superset/config.py

x-airflow-common:
  &x-airflow-common
  image: apache/airflow:2.3.0
  user: "${AIRFLOW_UID}:0"
  env_file:
    - .env.staging
  volumes:
    - ./staging/airflow/dags:/opt/airflow/dags
    - ./staging/airflow/logs:/opt/airflow/logs
    - ./staging/airflow/plugins:/opt/airflow/plugins
    - /var/run/docker.sock:/var/run/docker.sock

x-airflow-depends-on:
  &x-airflow-depends-on
  depends_on:
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

volumes:
  # Druid
  superset_data: {}

services:
  web:
      image: nginx:latest
      container_name: igad_nginx
      ports:
        - 80:${NGINX_PORT}
        # - 443:443
      volumes:
        - ./staging/nginx/nginx.conf:/etc/nginx/nginx.conf
        - ./staging/nginx/html:/etc/nginx/html

  frontend:
    container_name: next-js-frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    restart: always
    volumes:
      - ./frontend:/frontend
    command: npm run dev

  # Superset
  superset_cache:
    container_name: superset_cache
    image: redis:5
    restart: always

  superset_db:
    container_name: superset_db
    image: postgres:14
    volumes:
      - superset_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_SUPERSET_PASSWORD}
      - POSTGRES_USER=${POSTGRES_SUPERSET_USER}
      - POSTGRES_DB=${POSTGRES_SUPERSET_DB}

  superset:
    <<: *superset
    container_name: superset_web
    ports:
      - ${SUPERSET_PORT}:${SUPERSET_PORT}
    depends_on:
      - superset_db
      - superset_cache

  superset-init:
    <<: *superset
    container_name: superset-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        superset fab create-admin --username admin --firstname Superset --lastname Admin --email admin@superset.com --password admin
        superset db upgrade
        superset init
        

  # Django Backend
  backend:
    container_name: django-backend
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/backend
    env_file: .env.backend
    depends_on:
      - superset_db
    command: >
      sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"

  # Airflow
  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "5434:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
      interval: 5s
      retries: 5
    env_file:
      - .env.staging
  scheduler:
    <<: [*x-airflow-common, *x-airflow-depends-on]
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"

  webserver:
    <<: *x-airflow-common
    <<: *x-airflow-depends-on
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "9000:8080"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 30s
      retries: 5

  airflow-init:
    <<: *x-airflow-common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version
