import { useState } from 'react';
import { useTemplatesQuery } from '../pipeline';
import { Template } from '../interface';

type TemplateItemProps = {
  onSelect: (value: any) => void;
  hideModal: () => void;
  filteredTemplates;
};

export const TemplateItem = ({ onSelect, hideModal }: TemplateItemProps) => {
  const { data: templates } = useTemplatesQuery();
  const [selected, setSelected] = useState<Template>();
  const [searchQuery, setSearchQuery] = useState<string>('');

  const getIcon = (name: string) => {
    const icons = [
      'dhis2',
      'csv',
      'excel',
      'fhir',
      'json',
      'api',
      'postgresql',
      'sheet',
    ];

    const checkIcon = icons.find((e) => name.toLowerCase().indexOf(e) != -1);

    const icon = checkIcon;

    switch (icon) {
      case 'dhis2':
        return './images/dhis2.png';
      case 'csv':
        return './images/csv.png';
      case 'excel':
        return './images/excel.png';
      case 'fhir':
        return './images/fhir.webp';
      case 'json':
        return './images/json.png';
      case 'api':
        return './images/api.png';
      case 'postgresql':
        return './images/postgresql.png';
      case 'sheet':
        return './images/sheet.png';
    }
  };

  const filteredTemplates = (templates?.data || []).filter(
    (template) =>
      template?.name.toLowerCase().includes(searchQuery.toLowerCase())
  );
  return filteredTemplates;
};
export default TemplateItem;
